"""
Django settings for iron_work project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#gh%iadt(jb#(z*11iv%tj+w8rm1wl8f_-r_3wjs(ov9gcjfe4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get("DEBUG", default=0))

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	
	'corsheaders',
    'rest_framework',
    'djoser',
	
    'profiles',
	'mainpage',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


CSRF_TRUSTED_ORIGINS = ["https://1001-ad.ru", "https://k701.ru"]

if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOW_CREDENTIALS = True
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:8080",
    ]



ROOT_URLCONF = 'iron_work.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'template').replace('\\', '/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iron_work.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DB_HOST = os.environ.get('DB_HOST', 'localhost')
DB_PORT = os.environ.get('DB_PORT', 5432)
DB_USER = os.environ.get('DB_USER', 'postgres')
DB_NAME = os.environ.get('DB_NAME', 'db')
DB_PASS = os.environ.get('DB_PASS', '123')

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql_psycopg2',
		'HOST': DB_HOST,
		'PORT': DB_PORT,
		'NAME': DB_NAME,
		'USER': DB_USER,
		'PASSWORD': DB_PASS,
	},
}
	

#команды для перевода на другую бд
#python manage.py dumpdata --natural-primary --natural-foreign > dump.json
#python manage.py loaddata dump.json

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#email
#EMAIL_HOST			= 'smtp.yandex.ru'
# EMAIL_HOST 			= 'mail.riseup.net'

# EMAIL_PORT 			= 465
# EMAIL_HOST_USER 	= 'triada-service@riseup.net'
# EMAIL_HOST_PASSWORD = ''
# EMAIL_USE_SSL 		= True
# DEFAULT_FROM_EMAIL 	= 'triada-service@riseup.net'
# SERVER_EMAIL 		= 'triada-service@riseup.net'



# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE 	= 'ru-RU'
TIME_ZONE 		= 'Europe/Moscow'
USE_I18N 		= True
USE_L10N 		= True
USE_TZ 			= True
LIST_PER_PAGE	= 100


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = 'api/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

#моя статика
STATICFILES_DIRS = [
	os.path.join(BASE_DIR, "mystatic"),
	BASE_DIR,
]

MEDIA_URL	= '/media/'

MEDIA_ROOT 	= os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD='django.db.models.AutoField'

REST_FRAMEWORK = {

    #"DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )

}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
}

DJOSER = {
    'SERIALIZERS': {
        'current_user': 'profiles.serializers.UserViewSerializer',
    },
}